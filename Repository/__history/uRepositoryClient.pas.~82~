unit uRepositoryClient;

interface
uses uModelClient, Data.DB, Data.Win.ADODB,System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Def, FireDAC.Stan.Async,
  FireDAC.Phys.FB, FireDAC.Comp.DataSet, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.DApt, FireDAC.FMXUI.Wait, Data.SqlExpr;

type TRepositoryClient = class
  private
    procedure InsertDatabaseFirebird(pClient: TModelClient);
    procedure InsertDatabaseSQLServer(pClient: TModelClient);
    procedure  InsertDataBaseOracle(pClient: TModelClient);

  public
    procedure SaveClient(pClient: TModelClient; pDatabase: Integer);
end;

implementation

{ TRepositoryClient }

procedure TRepositoryClient.InsertDatabaseFirebird(pClient: TModelClient);
var
  FDConnection: TFDConnection;
  FDQuery: TFDQuery;
begin
  FDConnection := TFDConnection.Create(nil);
  FDQuery := TFDQuery.Create(nil);
  try
  try
 FDConnection.DriverName := 'FB';
 FDConnection.Params.Add('Database=D:\Projetos\Delphi-Varios-Bancos\banco\DATABASE.FDB');
 FDConnection.Params.Add('User_Name=SYSDBA');
 FDConnection.Params.Add('Password=masterkey');                   // Senha do usuário
  FDConnection.Params.Add('Server=localhost');                     // Endereço do servidor (use 'localhost' para conexões locais)
  FDConnection.Params.Add('Charset=WIN1252');                      // Charset, ajuste conforme necessário
  FDConnection.LoginPrompt := False; // Desative o prompt de login para evitar janelas de login durante a execução
  FDConnection.Connected := True;    //
FDConnection.Params.Add('Port=3050'); // Porta padrão do Firebird
FDConnection.LoginPrompt := False;
FDConnection.Connected := True;
    // Configurar a consulta de inserção

 FDQuery.Connection :=   FDConnection;
FDQuery.SQL.Add('INSERT INTO cliente (ID,NOME, ENDERECO, BAIRRO, CIDADE, UF, CEP) VALUES (:id, :name, :endereco, :bairro, :cidade, :uf, :cep)');
    // Definir os valores dos parâmetros
    FDQuery.ParamByName('id').AsInteger := 2;

    FDQuery.Params.ParamByName('name').AsString := pClient.Name;
    FDQuery.ParamByName('endereco').AsString := pClient.Address;
    FDQuery.ParamByName('bairro').AsString := pClient.Bairro;
    FDQuery.ParamByName('cidade').AsString := pClient.Location;
    FDQuery.ParamByName('uf').AsString := pClient.Uf;
    FDQuery.ParamByName('cep').AsInteger := pClient.Cep;
    // Executar a inserção
    FDQuery.ExecSQL;

  except
    on E: Exception do
      Writeln('Erro ao inserir dados: ' + E.Message);
  END;
  finally
  end;
end;
procedure TRepositoryClient.InsertDataBaseOracle(pClient: TModelClient);
var
  sqlServer: TADOQuery;
    connectionDatabase: TADOConnection;
begin
  sqlServer := TADOQuery.Create(nil);
    connectionDatabase := TADOConnection.Create(Nil);
  try
    connectionDatabase.ConnectionString := 'Provider=MSDAORA.1;User ID=LOCAL;Data Source=LOCAL;Persist Security Info=False';
    connectionDatabase.LoginPrompt := false;

   sqlServer.Connection :=  connectionDatabase;
   connectionDatabase.Open;
   sqlServer.SQL.Add('INSERT INTO cliente(NOME, ENDERECO, ' +
                     'BAIRRO, CIDADE, UF, CEP)VALUES(:name, :endereco, '+
                     ':bairro, :cidade, :uf, :cep)');
   sqlServer.Parameters.ParamByName('name').Value :=  pClient.Name;
   sqlServer.Parameters.ParamByName('endereco').Value := pClient.Address;
   sqlServer.Parameters.ParamByName('bairro').Value := pClient.Bairro;
   sqlServer.Parameters.ParamByName('cidade').Value :=  pClient.Location;
   sqlServer.Parameters.ParamByName('uf').Value := pClient.Uf;
   sqlServer.Parameters.ParamByName('cep').Value := pclient.Cep;

   sqlServer.ExecSQL;
  finally
   sqlServer.Free;
  end;


end;

procedure TRepositoryClient.InsertDatabaseSQLServer(pClient: TModelClient);
var
  sqlServer: TADOQuery;
    connectionDatabase: TADOConnection;
begin
  sqlServer := TADOQuery.Create(nil);
    connectionDatabase := TADOConnection.Create(Nil);
  try
    connectionDatabase.ConnectionString := 'Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Persist Security Info=False;User ID="";Initial Catalog=TESTESISTEMA;Data Source=localhost\SQLEXPRESS;Initial File Name="";Server SPN="";Authentication="";Access Token=""';
    connectionDatabase.LoginPrompt := false;

   sqlServer.Connection :=  connectionDatabase;
   connectionDatabase.Open;
   sqlServer.SQL.Add('INSERT INTO TESTESISTEMA.dbo.cliente(NOME, ENDERECO, ' +
                     'BAIRRO, CIDADE, UF, CEP)VALUES(:name, :endereco, '+
                     ':bairro, :cidade, :uf, :cep)');
   sqlServer.Parameters.ParamByName('name').Value :=  pClient.Name;
   sqlServer.Parameters.ParamByName('endereco').Value := pClient.Address;
   sqlServer.Parameters.ParamByName('bairro').Value := pClient.Bairro;
   sqlServer.Parameters.ParamByName('cidade').Value :=  pClient.Location;
   sqlServer.Parameters.ParamByName('uf').Value := pClient.Uf;
   sqlServer.Parameters.ParamByName('cep').Value := pclient.Cep;
    sqlServer.SQL.Add('SELECT 1 ');
   sqlServer.Open;
  finally
   sqlServer.Free;
  end;

end;

procedure TRepositoryClient.SaveClient(pClient: TModelClient;
  pDatabase: Integer);
begin
 if pDatabase = 0 then
 begin
  InsertDataBaseOracle(pClient);
 end
 else if pDatabase = 1 then
 begin
   InsertDatabaseFirebird(pClient);
 end
 else if pDatabase = 2 then
 begin
  InsertDatabaseSQLServer(pClient);
 end;


end;

end.

